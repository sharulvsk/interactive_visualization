                                           PURPLE CHATBOT
An interactive chatbot application built with the elegance of Dash and the power of Google Generative AI. This application not only facilitates conversations but also enables data-driven insights through dynamic visualizations and CSV processing.


          Key Features

‚ú® Interactive Chat: Engage with a bot in a stylish chat interface.
‚ú® Data Visualization: Upload CSV files to generate beautiful graphs on the fly.
‚ú® AI-Powered Responses: Leverage cutting-edge AI for dynamic and meaningful interactions.
‚ú® PDF Generation: Convert CSV data into professional-quality PDFs for easy sharing.
‚ú® Clean and Modern UI: Designed with a vibrant purple theme and responsive layout.


           üîß Prerequisites

Ensure your system meets these requirements before proceeding:
Python 3.7+
Internet connection for AI integration
Gemini API key


            üõ†Ô∏è Installation

Follow these steps to set up the application:
1. Clone the Repository:
   git clone https://github.com/sharulvsk/interactive_visualization.git
   cd "file path"
2.Set Up a Virtual Environment:
  python -m venv venv
  source venv/bin/activate   # Linux/Mac  
  venv\Scripts\activate      # Windows 
3.Install Dependencies:
  pip install -r requirements.txt
  Configure API Key:
  Create a .env file in the project directory with your API key:
  env
  GEMINI_API_KEY=your_api_key_here


            ‚ñ∂Ô∏è Running the Application
1.Start the server:
  python app.py


2.Open your browser and visit:
  http://127.0.0.1:8050  


            üé® Usage

1.Chat with the Bot:
  Type a message and click Send to start a conversation.

2.Upload a CSV File:
  Click the üìÇ button to upload a CSV file for analysis.

3.Generate Graphs:
  Request various graph types such as bar, line, scatter, and pie.

4.Convert CSV to PDF for asking doubts about csv:
  Ask the bot to create a PDF from your CSV data.


            üìä Supported Graph Types

1.Graph Type	Description	Example Use Case
2.Bar Chart	Compare quantities across categories	Sales data comparison
3.Line Graph	Visualize trends over time	Stock price movements
4.Scatter Plot	Show relationships between variables	Correlation analysis
5.Pie Chart	Display proportions	Market share breakdown
6.Histogram	Analyze data distribution	Frequency of test scores
7.Box Plot	Display data variability	Outlier detection in datasets


           üåü Future Enhancements

1.Multi-Language Support: Chat in different languages.
2.Advanced Graph Customizations: Provide detailed graph settings.
3.Real-Time Data Integration: Fetch live data for dynamic insights.


          ü§ù Contributing
We welcome contributions to improve this application. Please create an issue or submit a pull request!


